#Load the edgeR library
library("edgeR")
#Import gene count data
countsTable <- read.csv(file="/media/mae/5ED9-C6A9/TranscriptomeAnalysis_DmelUV/genome_sortedName_samtoolsHisat2_run2_counted_htseq_run1Analysis/cleaned.csv", row.names="gene")
head(countsTable)
#Import grouping factor
targets <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/TranscriptomeAnalysisPipeline_DaphniaUVTolerance/InputData/expDesign_fullSet.csv", row.names="sample")
#Setup a design matrix
group <- factor(paste(targets$treatment,targets$genotype,sep="."))
#cbind(targets,Group=group)
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
colnames(list) <- targets$sample
head(list)
#Retain genes only if it is expressed at a minimum level
keep <- filterByExpr(list)
summary(keep)
list <- list[keep, , keep.lib.sizes=FALSE]
#Use TMM normalization to eliminate composition biases
# between libraries
list <- calcNormFactors(list)
#list$samples
#Write normalized counts to file
normList <- cpm(list, normalized.lib.sizes=TRUE)
write.table(normList, file="normalizedCounts.csv", sep=",", row.names=TRUE)
#install.packages('VennDiagram')
library(VennDiagram)
#Import data
tags <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/vennSet_GLMvsGSEA.csv")
#Define sets for diagram
SET1 <- tags$GLM_Treat
SET2 <- tags$GLM_Tol
SET3 <- tags$GLM_Inter
SET4 <- tags$GSEA
#Replace NAs
SET1[is.na(SET1)] <- ""
SET2[is.na(SET2)] <- ""
SET3[is.na(SET3)] <- ""
SET4[is.na(SET4)] <- ""
#Draw the diagram from the Olympics sets
v1 <- venn.diagram(list(Y05=SET1, E05=SET2, Y023=SET3, R2=SET4),
fill = c("red", "green", "blue", "white"),
alpha = c(0.5, 0.5, 0.5, 0.5), cat.cex = 1.5, cex=1.5,
filename=NULL)
jpeg("/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/plotResults_GLMvsGSEA.jpg")
grid.newpage()
grid.draw(v1)
dev.off()
#Draw the diagram comparing the tolerant sets
v2 <- venn.diagram(list(Y05=SET1, E05=SET2, Sierra=SET3),
fill = c("red", "green", "blue"),
alpha = c(0.5, 0.5, 0.5), cat.cex = 1.5, cex=1.5,
filename=NULL)
jpeg("/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/plotResults_GLM.jpg")
grid.newpage()
grid.draw(v2)
dev.off()
#install.packages('VennDiagram')
library(VennDiagram)
#Import data
tags <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/vennSet_GLMvsGSEA.csv")
#Define sets for diagram
SET1 <- tags$GLM_Treat
SET2 <- tags$GLM_Tol
SET3 <- tags$GLM_Inter
SET4 <- tags$GSEA
#Replace NAs
SET1[is.na(SET1)] <- ""
SET2[is.na(SET2)] <- ""
SET3[is.na(SET3)] <- ""
SET4[is.na(SET4)] <- ""
#Draw the diagram from the Olympics sets
v1 <- venn.diagram(list(Y05=SET1, E05=SET2, Y023=SET3, R2=SET4),
fill = c("red", "green", "blue", "white"),
alpha = c(0.5, 0.5, 0.5, 0.5), cat.cex = 1.5, cex=1.5,
filename=NULL)
jpeg("/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/plotResults_GLMvsGSEA.jpg")
grid.newpage()
grid.draw(v1)
dev.off()
#Draw the diagram comparing the tolerant sets
v2 <- venn.diagram(list(Y05=SET1, E05=SET2, Sierra=SET3),
fill = c("red", "green", "blue"),
alpha = c(0.5, 0.5, 0.5), cat.cex = 1.5, cex=1.5,
filename=NULL)
jpeg("/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/plotResults_GLM.jpg")
grid.newpage()
grid.draw(v2)
dev.off()
#install.packages('VennDiagram')
library(VennDiagram)
#Import data
tags <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/vennSet_GLMvsGSEA.csv")
#Define sets for diagram
SET1 <- tags$GLM_Treat
SET2 <- tags$GLM_Tol
SET3 <- tags$GLM_Inter
SET4 <- tags$GSEA
#Replace NAs
SET1[is.na(SET1)] <- ""
SET2[is.na(SET2)] <- ""
SET3[is.na(SET3)] <- ""
SET4[is.na(SET4)] <- ""
#Draw the diagram from the Olympics sets
v1 <- venn.diagram(list(GLM.Treat=SET1, GLM.Tol=SET2, GLM.Inter=SET3, GSEA=SET4),
fill = c("red", "green", "blue", "white"),
alpha = c(0.5, 0.5, 0.5, 0.5), cat.cex = 1.5, cex=1.5,
filename=NULL)
jpeg("/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/plotResults_GLMvsGSEA.jpg")
grid.newpage()
grid.draw(v1)
dev.off()
#Draw the diagram comparing the tolerant sets
v2 <- venn.diagram(list(GLM.Treat=SET1, GLM.Tol=SET2, GLM.Inter=SET3),
fill = c("red", "green", "blue"),
alpha = c(0.5, 0.5, 0.5), cat.cex = 1.5, cex=1.5,
filename=NULL)
jpeg("/home/mae/Documents/RNASeq_Workshop_ND/GLMQLFvsGSEA/plotResults_GLM.jpg")
grid.newpage()
grid.draw(v2)
dev.off()
#Load the edgeR library
library("edgeR")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/genomicResources_PA42_v4.1/geneCounts_cleaned_PA42_v4.1.csv", row.names="gene")[ ,1:6]
head(countsTable)
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#Plot the library sizes before normalization
jpeg("exactTest_plotBarsBefore.jpg")
barplot(list$samples$lib.size*1e-6, names=1:6, ylab="Library size (millions)")
dev.off()
#Draw a MDS plot to show the relative similarities of the samples
# and to view batch and treatment effects before normalization
jpeg("exactTest_plotMDSBefore.jpg")
plotMDS(list, col=rep(1:3, each=3))
dev.off()
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
table(keep)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Write normalized counts to file
normList <- cpm(list, normalized.lib.sizes=TRUE)
write.table(normList, file="exactTest_normalizedCounts.csv", sep=",", row.names=TRUE)
#View normalization factors
list$samples
dim(list)
#Plot the library sizes after normalization
jpeg("exactTest_plotBarsAfter.jpg")
barplot(list$samples$lib.size*1e-6, names=1:6, ylab="Library size (millions)")
dev.off()
#Draw a MDS plot to show the relative similarities of the samples
# and to view batch and treatment effects after normalization
jpeg("exactTest_plotMDSAfter.jpg")
plotMDS(list, col=rep(1:3, each=3))
dev.off()
#Draw a heatmap of individual RNA-seq samples using moderated
# log-counts-per-million after normalization
jpeg("exactTest_plotHeatMapAfter.jpg")
logcpm <- cpm(list, log=TRUE)
heatmap(logcpm)
dev.off()
