countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/GeneCountsAnalyzed/genome_sortedName_samtoolsHisat2_run2_counted_htseq_run1/cleaned.csv", row.names="gene")[ ,1:24]
head(countsTable)
#Import grouping factor
#/home/mae/Documents/RNASeq_Workshop_ND/TranscriptomeAnalysisPipeline_DaphniaUVTolerance/InputData/expDesign_Olympics_GRP1.csv
targets <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/TranscriptomeAnalysisPipeline_DaphniaUVTolerance/InputData/expDesign_Olympics_GRP1.csv", row.names="sample")
#Setup a design matrix
group <- factor(paste(targets$treatment,targets$genotype,sep="."))
#cbind(targets,Group=group)
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
colnames(list) <- targets$sample
#Retain genes only if it is expressed at a minimum level
keep <- filterByExpr(list)
summary(keep)
list <- list[keep, , keep.lib.sizes=FALSE]
#Use TMM normalization to eliminate composition biases
# between libraries
list <- calcNormFactors(list)
list$samples
#Verify TMM normalization using a MD plot
plotMD(cpm(list, log=TRUE), column=1)
abline(h=0, col="red", lty=2, lwd=2)
#Use a MDS plot to visualizes the differences
# between the expression profiles of different samples
points <- c(0,1,2,3,15,16,17,18)
colors <- rep(c("blue", "darkgreen", "red", "black"), 2)
plotMDS(list, col=colors[group], pch=points[group])
legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
#The experimental design is parametrized with a one-way layout,
# where one coefficient is assigned to each group
design <- model.matrix(~ 0 + group)
colnames(design) <- levels(group)
design
#Next, the NB dispersion is estimated
list <- estimateDisp(list, design, robust=TRUE)
list$common.dispersion
#Visualize the dispersion estimates with a BCV plot
plotBCV(list)
#Now, estimate and plot the QL dispersions
fit <- glmQLFit(list, design, robust=TRUE)
head(fit$coefficients)
plotQLDisp(fit)
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con <- makeContrasts(
#Control
UV.E05vsR2 = UV.E05 - UV.R2, #A-B
UV.E05vsY05 = UV.E05 - UV.Y05, #A-D
UV.R2vsY023 = UV.R2 - UV.Y023, #B-C
UV.Y023vsY05 = UV.Y023 - UV.Y05, #C-D
#Treatment
#VIS.E05vsR2 = VIS.E05 - VIS.R2, #A-B
#VIS.E05vsY05 = VIS.E05 - VIS.Y05, #A-D
#VIS.R2vsY023 = VIS.R2 - VIS.Y023, #B-C
#VIS.Y023vsY05 = VIS.Y023 - VIS.Y05, #C-D
#Pairwise
#E05.UVvsVIS = UV.E05 - VIS.E05,
#R2.UVvsVIS = UV.R2 - VIS.R2,
#Y023.UVvsVIS = UV.Y023 - VIS.Y023,
#Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#Perform F-Test
qlf <- glmQLFTest(fit, contrast=con)
topTags(qlf)
summary(decideTests(qlf))
plotMD(qlf)
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con <- makeContrasts(
#Control
UV.E05vsR2 = UV.E05 - UV.R2, #A-B
UV.E05vsY05 = UV.E05 - UV.Y05, #A-D
UV.R2vsY023 = UV.R2 - UV.Y023, #B-C
UV.Y023vsY05 = UV.Y023 - UV.Y05, #C-D
#Treatment
VIS.E05vsR2 = VIS.E05 - VIS.R2, #A-B
VIS.E05vsY05 = VIS.E05 - VIS.Y05, #A-D
VIS.R2vsY023 = VIS.R2 - VIS.Y023, #B-C
VIS.Y023vsY05 = VIS.Y023 - VIS.Y05, #C-D
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
R2.UVvsVIS = UV.R2 - VIS.R2,
Y023.UVvsVIS = UV.Y023 - VIS.Y023,
Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#Perform F-Test
qlf <- glmQLFTest(fit, contrast=con)
topTags(qlf)
summary(decideTests(qlf))
plotMD(qlf)
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con <- makeContrasts(
#Control
#UV.E05vsR2 = UV.E05 - UV.R2, #A-B
#UV.E05vsY05 = UV.E05 - UV.Y05, #A-D
#UV.R2vsY023 = UV.R2 - UV.Y023, #B-C
#UV.Y023vsY05 = UV.Y023 - UV.Y05, #C-D
#Treatment
#VIS.E05vsR2 = VIS.E05 - VIS.R2, #A-B
#VIS.E05vsY05 = VIS.E05 - VIS.Y05, #A-D
#VIS.R2vsY023 = VIS.R2 - VIS.Y023, #B-C
#VIS.Y023vsY05 = VIS.Y023 - VIS.Y05, #C-D
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
R2.UVvsVIS = UV.R2 - VIS.R2,
Y023.UVvsVIS = UV.Y023 - VIS.Y023,
Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#Perform F-Test
qlf <- glmQLFTest(fit, contrast=con)
topTags(qlf)
summary(decideTests(qlf))
plotMD(qlf)
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con <- makeContrasts(
#Control
#UV.E05vsR2 = UV.E05 - UV.R2, #A-B
#UV.E05vsY05 = UV.E05 - UV.Y05, #A-D
#UV.R2vsY023 = UV.R2 - UV.Y023, #B-C
#UV.Y023vsY05 = UV.Y023 - UV.Y05, #C-D
#Treatment
#VIS.E05vsR2 = VIS.E05 - VIS.R2, #A-B
#VIS.E05vsY05 = VIS.E05 - VIS.Y05, #A-D
#VIS.R2vsY023 = VIS.R2 - VIS.Y023, #B-C
#VIS.Y023vsY05 = VIS.Y023 - VIS.Y05, #C-D
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
#R2.UVvsVIS = UV.R2 - VIS.R2,
#Y023.UVvsVIS = UV.Y023 - VIS.Y023,
#Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#Perform F-Test
qlf <- glmQLFTest(fit, contrast=con)
topTags(qlf)
summary(decideTests(qlf))
plotMD(qlf)
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con <- makeContrasts(
#Control
#UV.E05vsR2 = UV.E05 - UV.R2, #A-B
#UV.E05vsY05 = UV.E05 - UV.Y05, #A-D
#UV.R2vsY023 = UV.R2 - UV.Y023, #B-C
#UV.Y023vsY05 = UV.Y023 - UV.Y05, #C-D
#Treatment
#VIS.E05vsR2 = VIS.E05 - VIS.R2, #A-B
#VIS.E05vsY05 = VIS.E05 - VIS.Y05, #A-D
#VIS.R2vsY023 = VIS.R2 - VIS.Y023, #B-C
#VIS.Y023vsY05 = VIS.Y023 - VIS.Y05, #C-D
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
R2.UVvsVIS = UV.R2 - VIS.R2,
Y023.UVvsVIS = UV.Y023 - VIS.Y023,
Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#Perform F-Test
qlf <- glmQLFTest(fit, contrast=con)
topTags(qlf)
summary(decideTests(qlf))
plotMD(qlf)
#Test whether the differential expression is significantly
# above a log2-fold-change
tr <- glmTreat(fit, contrast=con, lfc=log2(1.2))
topTags(tr)
summary(decideTests(tr))
plotMD(tr)
#Load the edgeR library
library("edgeR")
library("statmod")
#Import gene count data
#/home/mae/Documents/RNASeq_Workshop_ND/GeneCountsAnalyzed/genome_sortedName_samtoolsHisat2_run2_counted_htseq_run1/cleaned.csv
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/GeneCountsAnalyzed/genome_sortedName_samtoolsHisat2_run2_counted_htseq_run1/cleaned.csv", row.names="gene")[ ,1:24]
head(countsTable)
#Import grouping factor
#/home/mae/Documents/RNASeq_Workshop_ND/TranscriptomeAnalysisPipeline_DaphniaUVTolerance/InputData/expDesign_Olympics_GRP1.csv
targets <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/TranscriptomeAnalysisPipeline_DaphniaUVTolerance/InputData/expDesign_Olympics_GRP1.csv", row.names="sample")
#Setup a design matrix
group <- factor(paste(targets$treatment,targets$genotype,sep="."))
#cbind(targets,Group=group)
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
colnames(list) <- targets$sample
#Retain genes only if it is expressed at a minimum level
keep <- filterByExpr(list)
summary(keep)
list <- list[keep, , keep.lib.sizes=FALSE]
#Use TMM normalization to eliminate composition biases
# between libraries
list <- calcNormFactors(list)
list$samples
#Verify TMM normalization using a MD plot
plotMD(cpm(list, log=TRUE), column=1)
abline(h=0, col="red", lty=2, lwd=2)
#Use a MDS plot to visualizes the differences
# between the expression profiles of different samples
points <- c(0,1,2,3,15,16,17,18)
colors <- rep(c("blue", "darkgreen", "red", "black"), 2)
plotMDS(list, col=colors[group], pch=points[group])
legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
#The experimental design is parametrized with a one-way layout,
# where one coefficient is assigned to each group
design <- model.matrix(~ 0 + group)
colnames(design) <- levels(group)
design
#Next, the NB dispersion is estimated
list <- estimateDisp(list, design, robust=TRUE)
list$common.dispersion
#Visualize the dispersion estimates with a BCV plot
plotBCV(list)
#Now, estimate and plot the QL dispersions
fit <- glmQLFit(list, design, robust=TRUE)
head(fit$coefficients)
plotQLDisp(fit)
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con <- makeContrasts(
#Control
#UV.E05vsR2 = UV.E05 - UV.R2, #A-B
#UV.E05vsY05 = UV.E05 - UV.Y05, #A-D
#UV.R2vsY023 = UV.R2 - UV.Y023, #B-C
#UV.Y023vsY05 = UV.Y023 - UV.Y05, #C-D
#Treatment
#VIS.E05vsR2 = VIS.E05 - VIS.R2, #A-B
#VIS.E05vsY05 = VIS.E05 - VIS.Y05, #A-D
#VIS.R2vsY023 = VIS.R2 - VIS.Y023, #B-C
#VIS.Y023vsY05 = VIS.Y023 - VIS.Y05, #C-D
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
R2.UVvsVIS = UV.R2 - VIS.R2,
Y023.UVvsVIS = UV.Y023 - VIS.Y023,
Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#Perform F-Test
qlf <- glmQLFTest(fit, contrast=con)
topTags(qlf)
summary(decideTests(qlf))
plotMD(qlf)
#Test whether the differential expression is significantly
# above a log2-fold-change
tr <- glmTreat(fit, contrast=con, lfc=log2(1.2))
topTags(tr)
summary(decideTests(tr))
plotMD(tr)
#Perform F-Test
qlf.E05.UVvsVIS <- glmQLFTest(fit, contrast=con[,E05.UVvsVIS])
#Perform F-Test
qlf.E05.UVvsVIS <- glmQLFTest(fit, contrast=con[,"E05.UVvsVIS"])
topTags(qlf.E05.UVvsVIS)
summary(decideTests(qlf.E05.UVvsVIS))
plotMD(qlf.E05.UVvsVIS)
#Test whether the differential expression is significantly
# above a log2-fold-change
tr.E05.UVvsVIS <- glmTreat(fit, contrast=con[,"E05.UVvsVIS"], lfc=log2(1.2))
topTags(tr.E05.UVvsVIS)
summary(decideTests(tr.E05.UVvsVIS))
plotMD(tr.E05.UVvsVIS)
#Test whether the differential expression is significant
tr.R2.UVvsVIS <- glmTreat(fit, contrast=con[,"R2.UVvsVIS"], lfc=log2(1.2))
#Pairwise R2.UVvsVIS
qlf.R2.UVvsVIS <- glmQLFTest(fit, contrast=con[,"R2.UVvsVIS"])
topTags(qlf.R2.UVvsVIS)
summary(decideTests(qlf.R2.UVvsVIS))
plotMD(qlf.R2.UVvsVIS)
#Test whether the differential expression is significant
tr.R2.UVvsVIS <- glmTreat(fit, contrast=con[,"R2.UVvsVIS"], lfc=log2(1.2))
topTags(tr.R2.UVvsVIS)
summary(decideTests(tr.R2.UVvsVIS))
plotMD(tr.R2.UVvsVIS)
#Pairwise Y023.UVvsVIS
qlf.Y023.UVvsVIS <- glmQLFTest(fit, contrast=con[,"Y023.UVvsVIS"])
topTags(qlf.Y023.UVvsVIS)
summary(decideTests(qlf.Y023.UVvsVIS))
plotMD(qlf.Y023.UVvsVIS)
#Test whether the differential expression is significant
tr.Y023.UVvsVIS <- glmTreat(fit, contrast=con[,"R2.UVvsVIS"], lfc=log2(1.2))
topTags(tr.Y023.UVvsVIS)
summary(decideTests(tr.Y023.UVvsVIS))
plotMD(tr.Y023.UVvsVIS)
#Pairwise Y05.UVvsVIS
qlf.Y05.UVvsVIS <- glmQLFTest(fit, contrast=con[,"Y05.UVvsVIS"])
topTags(qlf.Y05.UVvsVIS)
summary(decideTests(qlf.Y05.UVvsVIS))
plotMD(qlf.Y05.UVvsVIS)
#Test whether the differential expression is significant
tr.Y05.UVvsVIS <- glmTreat(fit, contrast=con[,"R2.UVvsVIS"], lfc=log2(1.2))
topTags(tr.Y05.UVvsVIS)
summary(decideTests(tr.Y05.UVvsVIS))
plotMD(tr.Y05.UVvsVIS)
#Test whether the differential expression is significant
tr.Y05.UVvsVIS <- glmTreat(fit, contrast=con[,"Y05.UVvsVIS"], lfc=log2(1.2))
topTags(tr.Y05.UVvsVIS)
summary(decideTests(tr.Y05.UVvsVIS))
plotMD(tr.Y05.UVvsVIS)
#ANOVA like comparisons of UV
anov.UV <- makeContrasts(UV.R2 - UV.E05,
UV.Y023 - UV.E05,
UV.Y05 - UV.E05,
levels=design)
topTags(anov.UV)
tr.E05.UVvsVIS <- glmTreat(fit, contrast=anov.UV)
tr.E05.UVvsVIS <- glmLRT(fit, contrast=anov.UV)
topTags(anov.UV)
tr.anov.UV <- glmLRT(fit, contrast=anov.UV)
topTags(tr.anov.UV)
summary(decideTests(tr.anov.UV))
plotMD(tr.anov.UV)
#ANOVA like comparisons of VIS
anov.VIS <- makeContrasts(VIS.R2 - VIS.E05,
VIS.Y023 - VIS.E05,
VIS.Y05 - VIS.E05,
levels=design)
tr.anov.VIS <- glmLRT(fit, contrast=anov.VIS)
topTags(tr.anov.VIS)
summary(decideTests(tr.anov.VIS))
plotMD(tr.anov.VIS)
#Test whether the average across all UV groups is equal to the average across
#all VIS groups, to examine the overall effect of treatment
UVvsVIS <- makeContrasts((UV.E05 + UV.R2 + UV.Y023 + UV.Y05)/4
- (VIS.E05 + VIS.R2 + VIS.Y023 + VIS.Y05)/4,
levels=design)
tr.anov.VIS <- glmLRT(fit, contrast=UVvsVIS)
topTags(tr.anov.VIS)
summary(decideTests(tr.anov.VIS))
plotMD(tr.anov.VIS)
tr.anov.VIS <- glmLRT(fit, contrast=UVvsVIS, lfc=log2(1.2))
#All pairs
con.allPairs <- glmLRT(fit, contrast=con)
topTags(con.allPairs)
summary(decideTests(con.allPairs))
plotMD(con.allPairs)
#Test whether the average across all UV groups is equal to the average across
#all VIS groups, to examine the overall effect of treatment
con.UVvsVIS <- makeContrasts(UVvsVIS = (UV.E05 + UV.R2 + UV.Y023 + UV.Y05)/4
- (VIS.E05 + VIS.R2 + VIS.Y023 + VIS.Y05)/4,
levels=design)
test.anov.VIS <- glmLRT(fit, contrast=con.UVvsVIS, lfc=log2(1.2))
test.anov.VIS <- glmLRT(fit, contrast=con.UVvsVIS)
topTags(test.anov.VIS)
summary(decideTests(test.anov.VIS))
plotMD(test.anov.VIS)
treat.anov.VIS <- glmTreat(fit, contrast=con.UVvsVIS, lfc=log2(1.2))
#All pairs
test.allPairs <- glmTreat(fit, contrast=con.allPairs, lfc=log2(1.2))
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con.allPairs <- makeContrasts(
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
R2.UVvsVIS = UV.R2 - VIS.R2,
Y023.UVvsVIS = UV.Y023 - VIS.Y023,
Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#All pairs
test.allPairs <- glmTreat(fit, contrast=con.allPairs, lfc=log2(1.2))
#Load the edgeR library
library("edgeR")
library("statmod")
#Import gene count data
#/home/mae/Documents/RNASeq_Workshop_ND/GeneCountsAnalyzed/genome_sortedName_samtoolsHisat2_run2_counted_htseq_run1/cleaned.csv
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/GeneCountsAnalyzed/genome_sortedName_samtoolsHisat2_run2_counted_htseq_run1/cleaned.csv", row.names="gene")[ ,1:24]
head(countsTable)
#head(countsTable)
#Import grouping factor
#/home/mae/Documents/RNASeq_Workshop_ND/TranscriptomeAnalysisPipeline_DaphniaUVTolerance/InputData/expDesign_Olympics_GRP1.csv
targets <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/TranscriptomeAnalysisPipeline_DaphniaUVTolerance/InputData/expDesign_Olympics_GRP1.csv", row.names="sample")
#Setup a design matrix
group <- factor(paste(targets$treatment,targets$genotype,sep="."))
#cbind(targets,Group=group)
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
colnames(list) <- targets$sample
#Retain genes only if it is expressed at a minimum level
keep <- filterByExpr(list)
summary(keep)
list <- list[keep, , keep.lib.sizes=FALSE]
#Use TMM normalization to eliminate composition biases
# between libraries
list <- calcNormFactors(list)
list$samples
#Verify TMM normalization using a MD plot
plotMD(cpm(list, log=TRUE), column=1)
abline(h=0, col="red", lty=2, lwd=2)
#Use a MDS plot to visualizes the differences
# between the expression profiles of different samples
points <- c(0,1,2,3,15,16,17,18)
colors <- rep(c("blue", "darkgreen", "red", "black"), 2)
plotMDS(list, col=colors[group], pch=points[group])
#legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
toplot <- data.frame(Dim1 = mds$x, Dim2 = mds$y, Group = factor(paste0("Grp", rep(1:2, each = 3))))
mds <- plotMDS(list, col=colors[group], pch=points[group])
#legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
toplot <- data.frame(Dim1 = mds$x, Dim2 = mds$y, Group = factor(paste0("Grp", rep(1:2, each = 3))))
library(ggplot2)
ggplot(toplot, aes(Dim1, Dim2, colour = Group)) + geom_point()
#legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
toplot <- data.frame(Dim1 = mds$x, Dim2 = mds$y, Group = factor(paste0("Grp", rep(1:4, each = 3))))
library(ggplot2)
ggplot(toplot, aes(Dim1, Dim2, colour = Group)) + geom_point()
legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
mds
plotMDS(list, col=colors[group], pch=points[group])
legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
#Use a MDS plot to visualizes the differences
# between the expression profiles of different samples
points <- c(0,1,2,3,15,16,17,18)
colors <- rep(c("blue", "darkgreen", "red", "black"), 2)
plotMDS(list, col=colors[group], pch=points[group])
legend("topleft", legend=levels(group), pch=points, col=colors, ncol=2)
plotMDS(list, col=colors[group], pch=points[group])
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con.allPairs <- makeContrasts(
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
R2.UVvsVIS = UV.R2 - VIS.R2,
Y023.UVvsVIS = UV.Y023 - VIS.Y023,
Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#The experimental design is parametrized with a one-way layout,
# where one coefficient is assigned to each group
design <- model.matrix(~ 0 + group)
colnames(design) <- levels(group)
design
#Next, the NB dispersion is estimated
list <- estimateDisp(list, design, robust=TRUE)
list$common.dispersion
#Visualize the dispersion estimates with a BCV plot
plotBCV(list)
#Now, estimate and plot the QL dispersions
fit <- glmQLFit(list, design, robust=TRUE)
head(fit$coefficients)
plotQLDisp(fit)
#Define a matrix of contrasts, where each column
# represents a contrast between two groups of interest
con.allPairs <- makeContrasts(
#Pairwise
E05.UVvsVIS = UV.E05 - VIS.E05,
R2.UVvsVIS = UV.R2 - VIS.R2,
Y023.UVvsVIS = UV.Y023 - VIS.Y023,
Y05.UVvsVIS = UV.Y05 - VIS.Y05,
levels=design)
#All pairs
test.allPairs <- glmTest(fit, contrast=con.allPairs)
#All pairs
test.allPairs <- glmLRT(fit, contrast=con.allPairs)
topTags(test.allPairs)
summary(decideTests(test.allPairs))
plotMD(test.allPairs)
#Pairwise E05.UVvsVIS
#qlf.E05.UVvsVIS <- glmQLFTest(fit, contrast=con[,"E05.UVvsVIS"])
#Test whether the differential expression is significant
treat.E05.UVvsVIS <- glmTreat(fit, contrast=con.allPairs[,"E05.UVvsVIS"], lfc=log2(1.2))
#topTags(treat.E05.UVvsVIS)
summary(decideTests(treat.E05.UVvsVIS))
plotMD(treat.E05.UVvsVIS)
#Pairwise R2.UVvsVIS
#Test whether the differential expression is significant
treat.R2.UVvsVIS <- glmTreat(fit, contrast=con.allPairs[,"R2.UVvsVIS"], lfc=log2(1.2))
#topTags(treat.R2.UVvsVIS)
summary(decideTests(treat.R2.UVvsVIS))
plotMD(treat.R2.UVvsVIS)
#Pairwise Y023.UVvsVIS
#Test whether the differential expression is significant
treat.Y023.UVvsVIS <- glmTreat(fit, contrast=con.allPairs[,"R2.UVvsVIS"], lfc=log2(1.2))
#topTags(treat.Y023.UVvsVIS)
summary(decideTests(treat.Y023.UVvsVIS))
plotMD(treat.Y023.UVvsVIS)
#Pairwise Y05.UVvsVIS
#Test whether the differential expression is significant
treat.Y05.UVvsVIS <- glmTreat(fit, contrast=con.allPairs[,"Y05.UVvsVIS"], lfc=log2(1.2))
#topTags(treat.Y05.UVvsVIS)
summary(decideTests(treat.Y05.UVvsVIS))
plotMD(treat.Y05.UVvsVIS)
#ANOVA like comparisons of UV
anov.UV <- makeContrasts(UV.R2 - UV.E05,
UV.Y023 - UV.E05,
UV.Y05 - UV.E05,
levels=design)
test.anov.UV <- glmLRT(fit, contrast=anov.UV)
#topTags(test.anov.UV)
summary(decideTests(test.anov.UV))
plotMD(test.anov.UV)
#ANOVA like comparisons of VIS
anov.VIS <- makeContrasts(VIS.R2 - VIS.E05,
VIS.Y023 - VIS.E05,
VIS.Y05 - VIS.E05,
levels=design)
test.anov.VIS <- glmLRT(fit, contrast=anov.VIS)
#topTags(test.anov.VIS)
summary(decideTests(test.anov.VIS))
plotMD(test.anov.VIS)
#Test whether the average across all UV groups is equal to the average across
#all VIS groups, to examine the overall effect of treatment
con.UVvsVIS <- makeContrasts(UVvsVIS = (UV.E05 + UV.R2 + UV.Y023 + UV.Y05)/4
- (VIS.E05 + VIS.R2 + VIS.Y023 + VIS.Y05)/4,
levels=design)
test.anov.VIS <- glmLRT(fit, contrast=con.UVvsVIS)
topTags(test.anov.VIS)
summary(decideTests(test.anov.VIS))
plotMD(test.anov.VIS)
#Look at genes with significant expression
treat.anov.VIS <- glmTreat(fit, contrast=con.UVvsVIS, lfc=log2(1.2))
topTags(treat.anov.VIS)
summary(decideTests(treat.anov.VIS))
plotMD(treat.anov.VIS)
test.anov.VIS <- glmLRT(fit, contrast=con.UVvsVIS[,"UVvsVIS"])
plotMD(test.anov.VIS)
#Look at genes with significant expression
treat.anov.VIS <- glmTreat(fit, contrast=con.UVvsVIS[,"UVvsVIS"], lfc=log2(1.2))
plotMD(treat.anov.VIS)
