#Import file with protein alignments
s <- read.alignment(file = "/home/mae/Documents/RNASeq_Workshop_ND/genomicResources_PA42_v4.1/gene4487_cds_allDaphnia_aligned.fasta", format = "fasta")
#Load the libraries
library(seqinr)
#Import file with protein alignments
s <- read.alignment(file = "/home/mae/Documents/RNASeq_Workshop_ND/genomicResources_PA42_v4.1/gene4487_cds_allDaphnia_aligned.fasta", format = "fasta")
#Generate ka ks values
kaks(s)
#Retrieve input gene ID
geneID="gene4487"
#Generate ka ks values
results <- kaks(s)
#Write table to file
write.table(results, file=paste(geneID,"MSA_kaks.csv",sep="_"), sep=",", row.names=TRUE)
#if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("reshape2")
library(reshape2)
df <- melt(as.matrix(results), varnames = c("row", "col"))
#Write table to file
write.table(results, file=paste(df,"MSA_kaks.csv",sep="_"), sep=",", row.names=TRUE)
df
ls
#Create function to reshape results
myFun <- function(inDist) {
if (class(inDist) != "dist") stop("wrong input type")
A <- attr(inDist, "Size")
B <- if (is.null(attr(inDist, "Labels"))) sequence(A) else attr(inDist, "Labels")
if (isTRUE(attr(inDist, "Diag"))) attr(inDist, "Diag") <- FALSE
if (isTRUE(attr(inDist, "Upper"))) attr(inDist, "Upper") <- FALSE
data.frame(
row = B[unlist(lapply(sequence(A)[-1], function(x) x:A))],
col = rep(B[-length(B)], (length(B)-1):1),
value = as.vector(inDist))
}
#Generate ka ks values
results <- kaks(s)
df <- myFun(results)
m <- data.frame(t(combn(rownames(results),2)), as.numeric(d))
m <- data.frame(t(combn(rownames(results),6)), as.numeric(d))
m <- data.frame(t(combn(rownames(results),7)), as.numeric(d))
mat2 <- as.matrix(results)
mat2[upper.tri(mat2, diag = FALSE)] <- ""
write.csv(mat2, "mat2.csv")
results
results[$ks]
results[$vka]
results %>% select(ks, ka)
library(dplyr)
results %>% select(ks, ka)
results[ks]
results[ks,]
results[,ks]
results[,ks[]]
results[,vka[]]
results[,$vka[]]
results[,$vka
results[,vka
]
results[,results.vka]
results
mat
matResults
matResults <- as.matrix(results)
matResults
matResults[ka]
matResults[ka[]]
matResults[ka,
]
matResults[,ka]
matResults[,1]
matResults[1,]
matResults[1,1]
head(matResults[1,])
head(matResults[,1])
head(matResults[1,])
matResults
#Import file with protein alignments
s <- read.alignment(file = "/home/mae/Documents/RNASeq_Workshop_ND/genomicResources_PA42_v4.1/gene4487_cds_allDaphnia_aligned.fasta", format = "fasta")
#Write each set of results to file
write.table(matResults[1,], file=paste(matResults,"MSA_ka.csv",sep="_"), sep=",", row.names=TRUE)
kaResults <- matResults[1,]
kaResults
#Write each set of results to file
write.table(kaResults, file=paste(matResults,"MSA_ka.csv",sep="_"), sep=",", row.names=TRUE)
kaResults <- as.matrix(matResults[1,])
kaResults
kaResults[upper.tri(kaResults, diag = FALSE)] <- ""
kaResults
#Write each set of results to file
write.csv(kaResults, file=paste(matResults,"MSA_ka.csv",sep="_"), row.names=TRUE)
#Write each set of results to file
write.csv(kaResults, file=paste(geneID,"MSA_ka.csv",sep="_"), row.names=TRUE)
kaResults <- matResults[1,]
kaResults[upper.tri(kaResults, diag = FALSE)] <- ""
kaResults
#Write each set of results to file
write.csv(kaResults, file=paste(geneID,"MSA_ka.csv",sep="_"), row.names=TRUE)
#Write each set of results to file
write.csv(as.matrix(kaResults), file=paste(geneID,"MSA_ka.csv",sep="_"), row.names=TRUE)
#Write each set of results to file
write.csv(kaResults, file=paste(geneID,"MSA_ka.csv",sep="_"))
#Write each set of results to file
write.csv(as.matrix(kaResults), file=paste(geneID,"MSA_ka.csv",sep="_"))
matResults <- as.matrix(dist(results))
completeMatrix(results)
